[{"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\index.js":"1","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\reportWebVitals.js":"2","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\App.js":"3","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\components\\TotalDisplay.js":"4","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\components\\CalcButton.js":"5","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\actions\\index.js":"6","C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\reducers\\index.js":"7"},{"size":515,"mtime":1635714462822,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1635714069025,"results":"10","hashOfConfig":"9"},{"size":3317,"mtime":1635714330656,"results":"11","hashOfConfig":"9"},{"size":440,"mtime":1635714069024,"results":"12","hashOfConfig":"9"},{"size":296,"mtime":1635714069024,"results":"13","hashOfConfig":"9"},{"size":887,"mtime":1635714445059,"results":"14","hashOfConfig":"9"},{"size":1446,"mtime":1635714373348,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tsh8cc",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\index.js",[],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\reportWebVitals.js",[],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\App.js",["32","33"],"import React, { useReducer } from 'react';\r\nimport reducer, { initialState } from './reducers/index'\r\nimport { applyNumber, changeOperation, clearDisplay, memoryTotal, memoryRecall, memoryClear } from './actions/index.js'\r\nimport './App.css';\r\n\r\nimport TotalDisplay from './components/TotalDisplay';\r\nimport CalcButton from './components/CalcButton';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  console.log(state)\r\n\r\n  const eventHandler = (e) => {\r\n    dispatch(applyNumber(e))\r\n  }\r\n\r\n  const displayHandler = (e) => {\r\n    dispatch(clearDisplay(e))\r\n  }\r\n\r\n  const memoryTotalHandler = () => {\r\n    dispatch(memoryTotal())\r\n  }\r\n\r\n  const memoryRecallHandler = () => {\r\n    dispatch(memoryRecall())\r\n  }\r\n\r\n  const memoryClearHandler = () => {\r\n    dispatch(memoryClear())\r\n  }\r\n\r\n  const addOperator = () => {\r\n    dispatch(changeOperation('+'))\r\n  }\r\n\r\n  const multiplyOperator = () => {\r\n    dispatch(changeOperation('*'))\r\n  }\r\n\r\n  const subtractOperator = () => {\r\n    dispatch(changeOperation('-'))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\r\n      </nav>\r\n      <div className = \"container row mt-5\">\r\n        <div className=\"col-md-12 d-flex justify-content-center\">\r\n          <form name=\"Cal\">\r\n\r\n          <TotalDisplay value={state.total}/>\r\n            <div className=\"row details\">\r\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\r\n                <span id=\"memory\"><b>Memory:</b>{state.memory}</span>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <CalcButton onClick={memoryTotalHandler} value={\"M+\"}/>\r\n                <CalcButton onClick={memoryRecallHandler} value={\"MR\"}/>\r\n                <CalcButton onClick={memoryClearHandler} value={\"MC\"}/>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <CalcButton onClick={() => eventHandler(1)} value={1}/>\r\n                <CalcButton onClick={() => eventHandler(2)} value={2}/>\r\n                <CalcButton onClick={() => eventHandler(3)} value={3}/>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <CalcButton onClick={() => eventHandler(4)} value={4}/>\r\n                <CalcButton onClick={() => eventHandler(5)} value={5}/>\r\n                <CalcButton onClick={() => eventHandler(6)} value={6}/>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <CalcButton onClick={() => eventHandler(7)} value={7}/>\r\n                <CalcButton onClick={() => eventHandler(8)} value={8}/>\r\n                <CalcButton onClick={() => eventHandler(9)} value={9}/>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <CalcButton onClick={addOperator} value={\"+\"}/>\r\n                <CalcButton onClick={multiplyOperator} value={\"*\"}/>\r\n                <CalcButton onClick={subtractOperator} value={\"-\"}/>\r\n              </div>\r\n\r\n              <div className=\"row ce_button\">\r\n                <CalcButton onClick={displayHandler} value={\"CE\"}/>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\nexport default App;",["34","35"],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\components\\TotalDisplay.js",[],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\components\\CalcButton.js",[],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\actions\\index.js",[],"C:\\Users\\mattr\\documents\\lambda-school\\web-module-project-reducer\\src\\reducers\\index.js",[],{"ruleId":"36","severity":1,"message":"37","line":13,"column":9,"nodeType":"38","endLine":13,"endColumn":46},{"ruleId":"39","severity":1,"message":"40","line":13,"column":46,"nodeType":"38","endLine":13,"endColumn":93},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-global-assign","no-unsafe-negation"]